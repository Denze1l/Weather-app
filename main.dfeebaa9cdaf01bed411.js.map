{"version":3,"sources":["webpack:///./template.hbs","webpack:///./refs.js","webpack:///./fetchWeather.js","webpack:///./geo.js","webpack:///./index.js"],"names":["Handlebars","__webpack_require__","module","exports","template","compiler","main","container","depth0","helpers","partials","data","stack1","alias1","lambda","alias2","escapeExpression","location","country","current","weather_icons","name","temperature","humidity","wind_speed","weather_descriptions","useData","refs","seaction","document","querySelector","form","fetchWeather","query","fetch","proxy","then","response","json","renderHtml","console","log","innerHTML","insertAdjacentHTML","catch","error","getGeo","options","maximumAge","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","PNotify","alert","addEventListener","event","preventDefault","currentTarget","elements","city","value","qwery"],"mappings":"qGAAA,IAAAA,EAAiBC,EAAQ,QAEzBC,EAAAC,SAAAH,EAAA,SAAAA,GAAAI,SAAA,CAAiEC,SAAA,eAAAC,KAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACjE,IAAAC,EAAAC,EAAAN,EAAAO,OAAAC,EAAAR,EAAAS,iBAEA,gCACAD,EAAAF,EAAA,OAAAD,EAAA,MAAAJ,IAAAS,SAAAT,GAAAI,EAAAM,QAAAN,EAAAJ,IACA,+DACAO,EAAAF,EAAA,OAAAD,EAAA,MAAAJ,IAAAW,QAAAX,GAAAI,EAAAQ,cAAAR,EAAAJ,IACA,kGACAO,EAAAF,EAAA,OAAAD,EAAA,MAAAJ,IAAAS,SAAAT,GAAAI,EAAAS,KAAAT,EAAAJ,IACA,gEACAO,EAAAF,EAAA,OAAAD,EAAA,MAAAJ,IAAAW,QAAAX,GAAAI,EAAAU,YAAAV,EAAAJ,IACA,iEACAO,EAAAF,EAAA,OAAAD,EAAA,MAAAJ,IAAAW,QAAAX,GAAAI,EAAAW,SAAAX,EAAAJ,IACA,0DACAO,EAAAF,EAAA,OAAAD,EAAA,MAAAJ,IAAAW,QAAAX,GAAAI,EAAAY,WAAAZ,EAAAJ,IACA,wEACAO,EAAAF,EAAA,OAAAD,EAAA,MAAAJ,IAAAW,QAAAX,GAAAI,EAAAa,qBAAAb,EAAAJ,IACA,eACCkB,SAAA,qGCpBcC,EAAA,CACbC,SAAUC,SAASC,cAAc,YACjCC,KAAMF,SAASC,cAAc,iBCoBhBE,EAnBM,SAAAC,GAMnBC,MAAMC,6HAAiDF,GACpDG,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAzB,GACJ,IAAM4B,EAAanC,IAASO,GAC5B6B,QAAQC,IAAI9B,GACZgB,EAAKC,SAASc,UAAY,GAC1Bf,EAAKC,SAASe,mBAAmB,aAAcJ,KAEhDK,MAAM,SAAAC,GAAK,OAAIL,QAAQC,IAAII,kBCb1BC,aAAS,WACb,IAAMC,EAAU,CACdC,WAAY,MAGd,OAAO,IAAIC,QAAQ,SAACC,EAASC,GAC3BC,UAAUC,YAAYC,mBAAmBJ,EAASC,EAAQJ,OAI9DD,IACGV,KAAK,SAAAnB,GACJuB,QAAQC,IAAIxB,GACZe,EAAgBf,EAASsC,OAAOC,SAApB,KAAiCvC,EAASsC,OAAOE,aAE9Db,MAAM,SAAAC,GAAK,OAAIa,IAAQC,MAAM,wCCDhChC,EAAKI,KAAK6B,iBAAiB,SATR,SAACC,GAClBA,EAAMC,iBACNtB,QAAQC,IAAIoB,EAAME,cAAcC,SAASC,KAAKC,OAC9C,IAAMC,EAAQN,EAAME,cAAcC,SAASC,KAAKC,MAChDlC,EAAamC","file":"main.dfeebaa9cdaf01bed411.js","sourcesContent":["var Handlebars = require(\"../node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template({\"compiler\":[7,\">= 4.0.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    var stack1, alias1=container.lambda, alias2=container.escapeExpression;\n\n  return \"<h2>Current weather in \"\n    + alias2(alias1(((stack1 = (depth0 != null ? depth0.location : depth0)) != null ? stack1.country : stack1), depth0))\n    + \"</h2>\\r\\n      <img\\r\\n        class=\\\"icon\\\"\\r\\n        src=\\\"\"\n    + alias2(alias1(((stack1 = (depth0 != null ? depth0.current : depth0)) != null ? stack1.weather_icons : stack1), depth0))\n    + \"\\\"\\r\\n        alt=\\\"Sunny\\\"\\r\\n      />\\r\\n    \\r\\n      <p>Location: <span data-field=\\\"location\\\">\"\n    + alias2(alias1(((stack1 = (depth0 != null ? depth0.location : depth0)) != null ? stack1.name : stack1), depth0))\n    + \"</span></p>\\r\\n      <p>Temperature: <span data-field=\\\"temp\\\">\"\n    + alias2(alias1(((stack1 = (depth0 != null ? depth0.current : depth0)) != null ? stack1.temperature : stack1), depth0))\n    + \"</span></p>\\r\\n      <p>Humidity: <span data-field=\\\"humidity\\\">\"\n    + alias2(alias1(((stack1 = (depth0 != null ? depth0.current : depth0)) != null ? stack1.humidity : stack1), depth0))\n    + \"%</span></p>\\r\\n      <p>Wind: <span data-field=\\\"wind\\\">\"\n    + alias2(alias1(((stack1 = (depth0 != null ? depth0.current : depth0)) != null ? stack1.wind_speed : stack1), depth0))\n    + \"kph</span></p>\\r\\n      <p>Conditions: <span data-field=\\\"conditions\\\">\"\n    + alias2(alias1(((stack1 = (depth0 != null ? depth0.current : depth0)) != null ? stack1.weather_descriptions : stack1), depth0))\n    + \"</span></p>\";\n},\"useData\":true});","export default {\r\n  seaction: document.querySelector('#weather'),\r\n  form: document.querySelector('#search-form'),\r\n};\r\n","import template from './template.hbs';\r\nimport refs from './refs';\r\n\r\nconst fetchWeather = query => {\r\n  const proxy = 'https://cors-anywhere.herokuapp.com/';\r\n  const defUrl = 'http://api.weatherstack.com/current?';\r\n  // let apiDate = 'current?';\r\n  const key = '4c39bd17e66ec339312161198de9b4c7';\r\n\r\n  fetch(proxy + defUrl + `access_key=` + key + `&query=${query}`)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      const renderHtml = template(data);\r\n      console.log(data);\r\n      refs.seaction.innerHTML = '';\r\n      refs.seaction.insertAdjacentHTML('afterbegin', renderHtml);\r\n    })\r\n    .catch(error => console.log(error));\r\n};\r\n\r\n//http://api.weatherstack.com/current?access_key=4c39bd17e66ec339312161198de9b4c7&query=New%20York\r\n\r\nexport default fetchWeather;\r\n","import fetchWeather from './fetchWeather';\r\nimport PNotify from 'pnotify/dist/es/PNotify.js';\r\nimport 'pnotify/dist/PNotifyBrightTheme.css';\r\n\r\nconst getGeo = () => {\r\n  const options = {\r\n    maximumAge: 1800000,\r\n  };\r\n\r\n  return new Promise((resolve, reject) => {\r\n    navigator.geolocation.getCurrentPosition(resolve, reject, options);\r\n  });\r\n};\r\n\r\ngetGeo()\r\n  .then(location => {\r\n    console.log(location);\r\n    fetchWeather(`${location.coords.latitude}, ${location.coords.longitude}`)\r\n  })\r\n  .catch(error => PNotify.alert('Please, type location by yourself!'));\r\n\r\nexport default getGeo;\r\n","import './styles.css';\nimport getGeo from './geo';\nimport template from './template.hbs';\nimport refs from './refs';\nimport fetchWeather from './fetchWeather'\n\n\n\n\nconst handelSubmit=(event)=>{\n  event.preventDefault();\n  console.log(event.currentTarget.elements.city.value);\n  const qwery = event.currentTarget.elements.city.value\n  fetchWeather(qwery)\n}\n\n\n\nrefs.form.addEventListener('submit', handelSubmit )\n// const refs = {\n  //   form: document.querySelector('#form'),\n// };\n\n// weather.then(data => {\n//   console.log(data);\n// });\n"],"sourceRoot":""}